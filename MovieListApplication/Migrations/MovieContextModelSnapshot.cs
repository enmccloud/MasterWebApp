// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieListApplication.Models;

namespace MovieListApplication.Migrations
{
    [DbContext(typeof(MovieContext))]
    partial class MovieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieListApplication.Models.Genre", b =>
                {
                    b.Property<string>("GenreID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");

                    b.HasData(
                        new { GenreID = "A", Name = "Action" },
                        new { GenreID = "C", Name = "Comedy" },
                        new { GenreID = "D", Name = "Drama" },
                        new { GenreID = "H", Name = "Horror" },
                        new { GenreID = "M", Name = "Musical" },
                        new { GenreID = "R", Name = "RomCom" },
                        new { GenreID = "S", Name = "SciFi" }
                    );
                });

            modelBuilder.Entity("MovieListApplication.Models.Movie", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreID")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("Rating")
                        .IsRequired();

                    b.Property<int?>("Year")
                        .IsRequired();

                    b.HasKey("MovieID");

                    b.HasIndex("GenreID");

                    b.ToTable("Movies");

                    b.HasData(
                        new { MovieID = 1, GenreID = "D", Name = "Casablanca", Rating = 5, Year = 1942 },
                        new { MovieID = 2, GenreID = "A", Name = "Wonder Woman", Rating = 3, Year = 2017 },
                        new { MovieID = 3, GenreID = "R", Name = "Moonstruck", Rating = 4, Year = 1988 }
                    );
                });

            modelBuilder.Entity("MovieListApplication.Models.Movie", b =>
                {
                    b.HasOne("MovieListApplication.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
